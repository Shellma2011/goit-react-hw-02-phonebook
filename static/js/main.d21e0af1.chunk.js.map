{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","handleChange","e","currentTarget","value","setState","handleOnSubmit","preventDefault","props","onSubmit","console","log","reset","this","htmlFor","id","type","onChange","pattern","title","required","telInputId","Component","ContactList","items","onDeleteContact","map","item","onClick","Filter","App","contacts","filter","addContact","contact","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d21e0af1.chunk.js","sourcesContent":["// import { number } from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, number, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n      [number]: value,\r\n    });\r\n  };\r\n\r\n  handleOnSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    console.log(this.state.name);\r\n    console.log(this.state.number);\r\n    console.log(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleOnSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Имя\r\n          <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.telInputId}>\r\n          Телефон\r\n          <input\r\n            id={this.telInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Добавить контакт</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\n\r\n// export default function ContactList = ({ contacts }) => (\r\n//   <ul>\r\n//     {contacts.map(({ id, name, number }) => (\r\n//       <li key={id}>\r\n//         <p>{name}</p>\r\n//         <p>{number}</p>\r\n//       </li>\r\n//     ))}\r\n//   </ul>\r\n// );\r\n\r\n// export default ContactList;\r\n//-------\r\nexport default function ContactList({ items, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {items.map(item => (\r\n        <li key={item.id}>\r\n          <p>{item.name + ':'}</p>\r\n          <p>{item.number}</p>\r\n          <button type=\"button\" onClick={() => onDeleteContact(item.id)}>\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Фильтр по имени\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // contacts: [],\n    // name: '',\n    // number: '',\n  };\n\n  // formSubmitHandler = data => console.log(data);\n  // handleNumberChange = e => {\n  //   this.setState({ number: e.target.value });\n  // };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  render() {\n    const { filter } = this.state;\n    // const newContacts = this.addContact();\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        {/* <h1>Phonebook</h1> */}\n        <ContactForm onSubmit={this.addContact} />\n        {/* <h2>Contacts</h2> */}\n        <Filter value={filter} onChange={this.changeFilter} />\n        {/* <label>\n          Фильтр по имени\n          <input type=\"text\" value={filter} onChange={this.changeFilter} />\n        </label> */}\n\n        {/* <ContactList items={contacts} /> */}\n        <ContactList items={visibleContacts} onDeleteContact={this.deleteContact} />\n        {/* <ul>\n          {this.state.contacts.map(({ id, name, number }) => (\n            <li key={id}>\n              <p>{name}</p>\n              <p>{number}</p>\n            </li>\n          ))}\n        </ul> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}